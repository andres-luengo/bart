Changelog
=========

All notable changes to the RFI Pipeline project will be documented in this file.

The format is based on `Keep a Changelog <https://keepachangelog.com/en/1.0.0/>`_,
and this project adheres to `Semantic Versioning <https://semver.org/spec/v2.0.0.html>`_.

[Unreleased]
------------

Added
~~~~~
- Comprehensive Sphinx documentation
- API reference documentation with autogenerated content
- Usage examples and tutorials
- Installation guide

[0.1.0] - 2025-08-11
--------------------

Added
~~~~~
- Initial release of RFI Pipeline
- Core RFI detection algorithm with multi-stage filtering
- Multi-processing support for parallel batch processing
- Command-line interface for ``rfi-pipeline`` main tool
- Progress monitoring tool ``rfi-pipeline-progress``
- Batch merging tool ``rfi-pipeline-merge``
- Comprehensive logging system with configurable verbosity
- Memory management with configurable limits
- Resume functionality for interrupted jobs
- Statistical filtering using warm, hot, and hotter significance thresholds
- Support for HDF5 input files with hdf5plugin compression
- CSV output format for detection results
- JSON metadata tracking for processing runs
- Batch processing system for fault tolerance
- Python API for programmatic access to all functionality

Features
~~~~~~~~
- **Multi-stage RFI Detection**: Three-level filtering system (warm, hot, hotter)
- **Parallel Processing**: Configurable number of worker processes
- **Memory Management**: Configurable RSS limits to prevent system overload
- **Batch Processing**: Divides large datasets into manageable batches
- **Progress Monitoring**: Real-time progress tracking with visual indicators
- **Result Merging**: Combine batch results into single output files
- **Flexible Configuration**: Extensive command-line options
- **Resume Capability**: Continue interrupted processing jobs
- **Comprehensive Logging**: Multiple log levels and destinations
- **Output Formats**: CSV, Parquet, and HDF5 output support
- **Frequency Filtering**: Process specific frequency ranges
- **Statistical Analysis**: Kurtosis and frequency characterization

Security
~~~~~~~~
- Memory limits prevent system resource exhaustion
- Input validation for file paths and parameters
- Safe handling of interrupted processes

Dependencies
~~~~~~~~~~~~
- Python >= 3.8
- numpy >= 1.20.0
- pandas >= 1.3.0
- scipy >= 1.7.0
- h5py >= 3.0.0
- hdf5plugin >= 3.0.0

Development Tools
~~~~~~~~~~~~~~~~~
- pytest for testing framework
- black for code formatting
- flake8 for linting
- mypy for type checking
- setuptools-based packaging
- GitHub Actions for CI/CD (planned)

Known Issues
~~~~~~~~~~~~
- Spliced HDF5 files are not fully supported
- Large memory usage for very high-resolution data
- Progress monitoring may be inaccurate for very small batches

Planned Features
~~~~~~~~~~~~~~~~
- Web-based progress monitoring interface
- Additional output formats (JSON, FITS)
- Integration with astronomical databases
- Enhanced visualization tools
- Docker containerization
- Performance optimizations for GPU acceleration
- Support for streaming data processing
- Advanced statistical models for RFI classification

Migration Notes
~~~~~~~~~~~~~~~
This is the initial release, so no migration is required. Future versions
will include migration guides for any breaking changes.

Deprecations
~~~~~~~~~~~~
None in this initial release.

Removed
~~~~~~~
None in this initial release.

Fixed
~~~~~
None in this initial release.

Contributors
~~~~~~~~~~~~
- Breakthrough Listen Team
- Community contributors (see GitHub repository)

License
~~~~~~~
This project is licensed under the MIT License. See the LICENSE file for details.
