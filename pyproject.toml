[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rfi-pipeline"
version = "0.2.0"
description = "Radio Frequency Interference Detection Pipeline for astronomical data"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Breakthrough Listen", email = "contact@breakthroughinitiatives.org"}
]
maintainers = [
    {name = "Breakthrough Listen", email = "contact@breakthroughinitiatives.org"}
]
keywords = ["astronomy", "rfi", "radio", "interference", "detection", "breakthrough-listen"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "h5py>=3.0.0",
    "hdf5plugin>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "jupyter",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autobuild>=2021.3.14",
]

[project.urls]
Homepage = "https://github.com/breakthrough-listen/rfi-pipeline"
Documentation = "https://github.com/breakthrough-listen/rfi-pipeline#readme"
Repository = "https://github.com/breakthrough-listen/rfi-pipeline"
"Bug Tracker" = "https://github.com/breakthrough-listen/rfi-pipeline/issues"

[project.scripts]
rfi-pipeline = "rfi_pipeline.__main__:main"
rfi-pipeline-progress = "rfi_pipeline.check_progress.__main__:main"
rfi-pipeline-merge = "rfi_pipeline.merge.__main__:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["rfi_pipeline*"]
exclude = ["test*", "experiments*", "__pycache__*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.cfg", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "hdf5plugin.*",
    "h5py.*",
]
ignore_missing_imports = true
